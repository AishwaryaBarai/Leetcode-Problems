class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        nums.sort()
        return nums[-k]
        
sol 2:

class Solution:
    def findKthLargest(self, nums, k):
        h = []
        for n in nums:
            if len(h) < k:
                heapq.heappush(h, n)
            else:
                heapq.heappushpop(h, n)
        return h[0]
        



time complexity: o(n)

class Solution:
    def findKthLargest(self, nums: List[int], k: int) -> int:
        heap = []
        heapify(heap)
        for i in nums:
            heappush(heap,i)
            if len(heap) > k:
                heappop(heap)
        return heappop(heap)
