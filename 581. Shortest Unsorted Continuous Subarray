class Solution:
    def findUnsortedSubarray(self, nums: List[int]) -> int:
        sorted_lst = sorted(nums)
        if sorted_lst == nums:
            return 0
        else:
            start = 0
            end = len(nums)-1
            while start < len(nums) and nums[start] == sorted_lst[start]:
                start+=1
            while end > 0 and nums[end] == sorted_lst[end]:
                end-=1
            return (end-start) + 1
            
                           

  class Solution:
    def findUnsortedSubarray(self, nums: List[int]) -> int:
        sorted_nums = sorted(nums)
        i, j = 0, len(nums) - 1
        while i < len(nums):
            if nums[i] != sorted_nums[i]:
                break
            i += 1
        while j > 0:
            if nums[j] != sorted_nums[j]:
                break 
            j -= 1
        if j - i + 1 <= 0:
            return 0
        return j - i + 1

                         
