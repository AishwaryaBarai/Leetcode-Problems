class Solution(object):
    def mergeTrees(self, t1, t2):

        if t1 == None:
            return t2

        if t2 == None:
            return t1

        t1.val = t1.val + t2.val

        t1.left = self.mergeTrees(t1.left, t2.left)
        t1.right = self.mergeTrees(t1.right, t2.right)

        return t1


class Solution:
    def mergeTrees(self, root1: TreeNode, root2: TreeNode) -> TreeNode:
        if not root1:
            return root2
        stack = [(root1,root2)]
        while stack:
            node1,node2 = stack.pop()
            if not node1 or not node2:
                continue
            node1.val += node2.val
            if not node1.left:
                node1.left = node2.left
            else:
                stack.append((node1.left,node2.left))
            if not node1.right:
                node1.right = node2.right
            else:
                stack.append((node1.right,node2.right))
        return root1
                    
