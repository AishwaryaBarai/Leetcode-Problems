# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        if not head:
            return None
        count = 1
        curr = head
        while curr.next:
            curr = curr.next
            count +=1
        k = k%count
        curr.next = head
        temp = head
        for _ in range(count - k - 1):
            temp = temp.next
        ans = temp.next
        temp.next = None
        return ans
        
