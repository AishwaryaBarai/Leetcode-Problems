naive:
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        for i in range(len(nums)):
            val = target - nums[i]
            if (val in nums) and i != nums.index(val):
                return i,nums.index(val)
        

dict:


class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dic = {}
        i = 0
        while i < len(nums):
            val = target - nums[i]
            if val in dic:
                return(i, dic[val])
            dic[nums[i]] = i
            i +=1
        
        
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        d = {}
        for i in range(len(nums)):
            comp = target - nums[i]
            if comp in d:
                return d[comp],i
            d[nums[i]] = i
