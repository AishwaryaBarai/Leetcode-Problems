class Solution:
    def countNodes(self, root: TreeNode) -> int:
        if not root:
            return 0
        count = 0
        stack = [root]
        while stack:
            curr = stack.pop()
            count +=1
            if curr.left:
                stack.append(curr.left)
            if curr.right:
                stack.append(curr.right)
        return count
                
                
class Solution:
    def countNodes(self, root: TreeNode) -> int:
        if not root:
            return 0
        
        def leftcount(root):
            if root:
                return 1+ leftcount(root.left)
            return 0
        def rightcount(root):
            if root:
                return 1+ rightcount(root.right)
            return 0
        
        lc = leftcount(root)
        rc = rightcount(root)
        if lc == rc:
            return pow(2,lc)-1
        
        return 1 + self.countNodes(root.left) + self.countNodes(root.right)
        
