class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if head == None:
            return 0
        else:
            slow = head
            fast = head
            while(fast !=None and fast.next !=None):
                slow = slow.next
                fast = fast.next.next
                if(slow == fast):
                    return 1
        return 0
  
  


class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if head:
            slow = head 
            fast = head
            while fast.next and fast.next.next:
                fast = fast.next.next
                slow = slow.next
                if fast == slow:
                    return True
        return False



class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        fast, slow = head,head
        while fast and fast.next:
            slow = slow.next
            fast = fast.next.next
            if fast == slow:
                return 1
        
