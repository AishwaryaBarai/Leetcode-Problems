class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        if not head:
            return None
        ptr1 = head
        while n:
            ptr1 = ptr1.next
            n-=1
        if not ptr1:
            return head.next
        ptr2 = head
        while ptr1.next:
            ptr1 = ptr1.next
            ptr2 = ptr2.next
        ptr2.next = ptr2.next.next
        return head
        





class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        dummy = ListNode(0)
        dummy.next = head
        first = dummy
        second = dummy
        for i in range(1,n+1):
            first = first.next
        while first.next:
            first = first.next
            second = second.next
        second.next = second.next.next
        return dummy.next
        


dummy = ListNode(0, head)
	f, s = dummy, dummy
	while n:
		f = f.next
		n-=1

	while f and f.next:
		f = f.next
		s = s.next
	s.next = s.next.next
	return dummy.next
