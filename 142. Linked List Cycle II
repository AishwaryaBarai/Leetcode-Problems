class Solution:
    def detectCycle(self, head: ListNode) -> ListNode:
       
        fast = head
        slow = head
        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next
            if fast == slow:
                start = head
                while start != slow:
                    start = start.next
                    slow = slow.next
                return slow


class Solution:
    def detectCycle(self, head: ListNode) -> ListNode:
        visited = set()
        curr = head
        while curr and curr.next:
            if curr in visited:
                return curr
            visited.add(curr)
            curr = curr.next
            
