class Solution:
    def numMatchingSubseq(self, s: str, words: List[str]) -> int:
        i = 0
        final_count = Counter(words)
        
        
        for word in set(words):
            it = iter(s)
            
            if all(letter in it for letter in word):
                i += final_count[word]
                
        
        return i
        
        
        
        n_subsequences = 0
        state = defaultdict(list)
        for word in words:
            state[word[0]].append(word[1:])
        for char in S:
            old_bucket = state[char]
            state[char] = []
            for suffix in old_bucket:
                if not suffix:
                    n_subsequences += 1
                else:
                    state[suffix[0]].append(suffix[1:])
        return n_subsequences
